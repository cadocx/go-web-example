= doctype html
html
  head
    = css
      #search-results tr:hover,
      #view-results tr:hover,
      #view-page th:hover {
        background-color: lightgrey;
        cursor: pointer;
      }
      #page-switcher {
        width: 100%;
        text-align: center;
      }
      #page-switcher button {
        font-size: 24px;
        font-weight: bold;
        margin: 1em;
        padding: .3em;
      }
      .delete-btn {
        color: white;
        background-color: #d9534f;
        border-color: #d43f3a;
        border-radius: 8px;
      }
      .add-btn {
        color: white;
        background-color: green;
        border-color: green;
        border-radius: 8px;
      }
      #user-info {
        text-align:right;
      }
  link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css"
  body
    #user-info
      div You are currently logged in as <b>{{.User}}</b>
      a href="/logout" (Log Out)

    div#page-switcher
      button onclick="showViewPage()" View Library
      button onclick="showSearchPage()" Add Books

    div#search-page style="display: none;"
      form id="search-form" onsubmit="return false"
        input name="search"
        input type="submit" value="Search" onclick="submitSearch()"

      table width="100%"
        thead
          tr style="text-align: left;"
            th width="40%" Title
            th width="30%" Author
            th width="10%" Year
            th width="20%" ID
        tbody id="search-results"

    div#view-page

      form#filter-view-results style="float: right;"
        select name="filter" style="font-size: 18px; min-width: 10em;" onchange="filterViewResults()"
          option value="all" All
          option value="fiction" Fiction
          option value="nonfiction" Nonfiction

      table width="100%"
        thead
          tr style="text-align: left;"
            th width="45%" onclick="sortBooks('title')" Title
            th width="35%" onclick="sortBooks('author')" Author
            th width="15%" onclick="sortBooks('classification')" Classification
            th width="5%"
        tbody#view-results
          {{range .Books}}
            tr id="book-row-{{.PK}}"
              td {{.Title}}
              td {{.Author}}
              td {{.Classification}}
              td
                button.delete-btn onclick="deleteBook({{.PK}})" Delete
          {{end}}

    script type="text/javascript" src="http://code.jquery.com/jquery-3.3.1.min.js"
    = javascript

      $(function(){
        $("#filter-view-results option[value='" + {{.Filter}} + "']").prop("selected", true);
      });

      function rebuildBookCollection(result) {
        const books = JSON.parse(result);
        if(!books) return;
        $("#view-results").empty();
        books.forEach(function(book){
          appendBook(book);     
        });
      }

      function filterViewResults() {
        $.ajax({
          method: "GET",
          url: "/books",
          data: $("#filter-view-results").serialize(),
          success: rebuildBookCollection
        });
      }

      function appendBook(book) {
        $("#view-results").append("<tr id='book-row-" + book.PK + "'><td>" + book.Title + "</td><td>" + book.Author + "</td><td>" + book.Classification + "</td><td><button class='delete-btn' onclick='deleteBook(" + book.PK + ")'>Delete</button></td></tr>");
      }

      function sortBooks(columnName) {
        $.ajax({
          method: "GET",
          url: "/books?sortBy=" + columnName,
          success: rebuildBookCollection
        });
      }

      function deleteBook(pk) {
        $.ajax({
          method: "DELETE",
          url: "/books/" + pk,
          success: function() {
            $('#book-row-' + pk).remove();
            alert("Deleted");
          }
        });
      }

      function showSearchPage() {
        $('#search-page').show();
        $('#view-page').hide();
      }

      function showViewPage() {
        $('#search-page').hide();
        $('#view-page').show();
      }

      function submitSearch() {
        $.ajax({
          url: "/search",
          method: "POST",
          data: $("#search-form").serialize(),
          success: function(rawData) {
            const data = JSON.parse(rawData);
            if (!data) return;

            const searchResults = $("#search-results");
            searchResults.empty();

            data.forEach(function(result) {
              const row = $("<tr><td>" + result.Title + "</td><td>" + result.Author + "</td><td>" + result.Year +  "</td><td>" + result.ID + "</td><td>" + "<button class='add-btn'>Add</button>" + "</td></tr>");
              searchResults.append(row);
              row.on("click", function(e) {
                e.preventDefault();
                $.ajax({
                  url: "/books?id=" + result.ID,
                  method: "PUT",
                  success: function(data) {
                    const book = JSON.parse(data);
                    if(!book) return;
                    appendBook(book);
                  }
                })
                alert("Book added to library");
              })
            });
          }
        });

        return false;
      }